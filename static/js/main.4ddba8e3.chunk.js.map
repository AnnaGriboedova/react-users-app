{"version":3,"sources":["api/api.js","redux/usersReducer.js","redux/redux-store.js","components/Users/User.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","components/Nav/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","baseURL","headers","usersAPI","get","then","response","data","SET_USERS","REMOVE_USERS","ADD_USER","initialState","users","removeUsers","usersReducer","state","action","type","removeUser","filter","user","id","userId","reducers","combineReducers","usersPage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","UserListItem","UserNameEl","firstName","first_name","lastName","last_name","UserRemoveBtnEl","className","UserBlock","alt","src","avatar","email","UserName","UserRemoveBtn","onClick","UsersList","AddButton","Settings","Users","map","UsersBlocks","props","useState","displayAsList","setDisplayAsList","AddButtonEl","isEmptyRemoveUsers","addUser","connect","requestUsers","dispatch","a","Promise","resolve","isFetching","setIsFetching","useEffect","length","Navbar","to","App","exact","render","path","AppContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ddba8e3.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://reqres.in/api/',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers() {\r\n        return instance.get('users?per_page=12').then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n};\r\n\r\n","import {usersAPI} from \"../api/api\";\r\n\r\nconst SET_USERS = 'SET_USERS';\r\nconst REMOVE_USERS = 'REMOVE_USERS';\r\nconst ADD_USER = 'ADD_USER';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    removeUsers: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n        case REMOVE_USERS:\r\n            let removeUser = [];\r\n            let users = state.users.filter((user) => {\r\n                if (user.id !== action.userId) {\r\n                    return true;\r\n                } else {\r\n                    removeUser = user;\r\n                    return false\r\n                }\r\n            });\r\n            return {\r\n                ...state, users: users, removeUsers: [...state.removeUsers, removeUser]\r\n            };\r\n        case ADD_USER:\r\n            let user = state.removeUsers[0];\r\n            return {\r\n                ...state, users: [...state.users, user], removeUsers: state.removeUsers.filter((removeUser) => {\r\n                    return removeUser.id !== user.id;\r\n                })\r\n            };\r\n\r\n    }\r\n    return state\r\n};\r\n\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\n\r\nexport const removeUser = (userId) => ({\r\n    type: REMOVE_USERS,\r\n    userId\r\n});\r\n\r\nexport const addUser = () => ({\r\n    type: ADD_USER\r\n});\r\n\r\nexport const requestUsers = () =>\r\n    async (dispatch) => {\r\n        let data = await usersAPI.getUsers();\r\n\r\n        dispatch(setUsers(data.data));\r\n\r\n        return Promise.resolve();\r\n    };\r\n\r\n\r\nexport default usersReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\n\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    usersPage: usersReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nexport default store;","import React from 'react'\r\n\r\nexport const UserListItem = ({user, removeUser}) => {\r\n    let UserNameEl = <UserName firstName={user.first_name} lastName={user.last_name}/>;\r\n    let UserRemoveBtnEl = <UserRemoveBtn removeUser={removeUser}\r\n                                         userId={user.id}/>;\r\n\r\n    return <li className='user'>{UserNameEl}{UserRemoveBtnEl}</li>\r\n};\r\n\r\nexport const UserBlock = ({user, removeUser}) => {\r\n    let UserNameEl = <UserName firstName={user.first_name} lastName={user.last_name}/>;\r\n    let UserRemoveBtnEl = <UserRemoveBtn removeUser={removeUser}\r\n                                         userId={user.id}/>;\r\n\r\n    return (\r\n        <div className='user'>\r\n            <div>\r\n                <img alt='avatar' src={user.avatar}/>\r\n            </div>\r\n            <div>\r\n                {UserNameEl}\r\n                <div>{user.email}</div>\r\n            </div>\r\n            {UserRemoveBtnEl}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst UserName = ({firstName, lastName}) => {\r\n    return <b>\r\n        <span>{firstName}</span>\r\n        <span>{lastName}</span>\r\n    </b>\r\n};\r\n\r\nconst UserRemoveBtn = ({removeUser, userId}) => {\r\n    return <button className='user__buttonRemove' onClick={() => {\r\n        removeUser(userId)\r\n    }}>Remove\r\n    </button>\r\n};","import React, {useState} from 'react'\r\n\r\nimport {UserBlock, UserListItem} from \"./User\";\r\n\r\nconst Users = (props) => {\r\n    let [displayAsList, setDisplayAsList] = useState(true);\r\n\r\n    const AddButtonEl = !props.isEmptyRemoveUsers && <div className=\"addUser \">\r\n        <button className='button' onClick={props.addUser}>Add User</button>\r\n    </div>;\r\n\r\n    const Settings = <div className='settings'>\r\n        <button className='displayButton' onClick={() => {\r\n            setDisplayAsList(!displayAsList)\r\n        }}>display blocks\r\n        </button>\r\n    </div>;\r\n\r\n    return displayAsList ?\r\n        <UsersList users={props.users} removeUser={props.removeUser} AddButton={AddButtonEl} Settings={Settings}/> :\r\n        <UsersBlocks users={props.users} removeUser={props.removeUser} AddButton={AddButtonEl} Settings={Settings}/>\r\n};\r\n\r\nconst UsersList = ({users, AddButton, Settings, removeUser}) => {\r\n    const Users = users.map((user) => {\r\n        return <UserListItem user={user} key={user.id} removeUser={removeUser}/>\r\n    });\r\n\r\n    return <div className='users_display_list'>\r\n        {Settings}\r\n        <ul className='users'>{Users}</ul>\r\n        {AddButton}\r\n    </div>\r\n};\r\nconst UsersBlocks = ({users, AddButton, Settings, removeUser}) => {\r\n    const Users = users.map((user) => {\r\n        return <UserBlock user={user} key={user.id} removeUser={removeUser}/>\r\n    });\r\n\r\n    return <div className='users_display_blocks'>\r\n        {Settings}\r\n        <div className='users'>{Users}{AddButton}</div>\r\n    </div>\r\n};\r\n\r\nexport default Users;","import React, {useState, useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {removeUser, requestUsers, addUser} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\n\r\n\r\nconst UsersContainer = (props) => {\r\n    let [isFetching, setIsFetching] = useState(true);\r\n    let users = props.users;\r\n\r\n    useEffect(() => {\r\n        if (!users.length) {\r\n            props.requestUsers().then(() => {\r\n                setIsFetching(false);\r\n            });\r\n        }\r\n    }, [users]);\r\n\r\n    if (isFetching && !users.length) {\r\n        return \"Загрузка\"\r\n    }\r\n    const isEmptyRemoveUsers = !props.removeUsers.length;\r\n    return <div>{<Users users={users} removeUser={props.removeUser} addUser={props.addUser}\r\n                        isEmptyRemoveUsers={isEmptyRemoveUsers}/>}</div>\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        removeUsers: state.usersPage.removeUsers,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {requestUsers, removeUser, addUser})(UsersContainer);","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav>\r\n            <div>\r\n                <NavLink to={'/'}>\r\n                    Главная\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={'/employees'}>\r\n                    Сотрудники\r\n                </NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar","import React from 'react';\nimport './App.css';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport Navbar from \"./components/Nav/Navbar\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Navbar/>\n            <div className='contentContainer'>\n                <Switch>\n                    <Route exact render={() =>\n                        <div className='homeContent'>Home Page</div>\n                    } path='/'/>\n\n                    <Route render={() =>\n                        <UsersContainer/>\n                    } path='/employees'/>\n\n                    <Route render={() => <div>404 page not found</div>} path='*'/>\n                </Switch>\n            </div>\n        </div>\n    );\n}\n\nconst AppContainer = () => {\n    return <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>\n};\n\nexport default AppContainer;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}